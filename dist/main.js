(()=>{"use strict";function t(l){if(l.length<2)return;const e=l.slice(0,l.length/2),r=l.slice(Math.floor(l.length/2-l.length));t(e),t(r);let o=0,n=0,i=0;const s=l;for(;o<e.length&&n<r.length;)e[o]<r[n]?s[i++]=e[o++]:s[i++]=r[n++];for(;o<e.length;o++)s[i++]=e[o];for(;n<r.length;n++)s[i++]=r[n];l=s}class l{constructor(t,l,e){this.value=t||null,this.left=l||null,this.right=e||null}}function e(t,l="",r=!0){null!==t&&(null!==t.right&&e(t.right,`${l}${r?"│   ":"    "}`,!1),console.log(`${l}${r?"└── ":"┌── "}${t.value}`),null!==t.left&&e(t.left,`${l}${r?"    ":"│   "}`,!0))}const r=new class{constructor(t){this.array=t,this.sortArray(),this.root=this.buildTree(t)}sortArray(){!function(t){for(let l=0;l<t.length;l++)for(let e=l+1;e<t.length;e++)t[l]===t[e]&&(t.splice(e,1),e--)}(this.array),t(this.array)}buildTree(t){const e=Math.floor(t.length/2),r=t[e];if(t.length<1)return;const o=this.buildTree(t.slice(0,e)),n=this.buildTree(t.slice(e+1));return new l(r,o,n)}insert(t,e){t!==e.value&&(t<e.value?(null===e.left&&(e.left=new l(t)),this.insert(t,e.left)):e.value<t&&(null===e.right&&(e.right=new l(t)),this.insert(t,e.right)))}delete(t,l){return t<l.value?(l.left=this.delete(t,l.left),l):l.value<t?(l.right=this.delete(t,l.right),l):t===l.value?null!==l.left&&null!==l.right?(l.left.right=l.right,l=l.left):l=null!==l.left?l.left:null!==l.right?l.right:null:void 0}}([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]);console.log(r.array),console.log(r.root),e(r.root),r.insert(12,r.root),r.insert(68,r.root),r.insert(2,r.root),r.insert(486,r.root),console.log(r.root),e(r.root),r.delete(67,r.root),r.delete(4,r.root),r.delete(6345,r.root),r.delete(2,r.root),console.log(r.root),e(r.root)})();